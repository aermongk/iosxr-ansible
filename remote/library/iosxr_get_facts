#!/usr/bin/python
#------------------------------------------------------------------------------
# Copyright 2016 Cisco Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#------------------------------------------------------------------------------

from ansible.module_utils.shell import *
from ansible.module_utils.basic import *

DOCUMENTATION = """
---
module: iosxr_get_facts
author: Adisorn Ermongkonchai
short_description: Get IOS-XR information
description:
  - Get IOS-XR configuration and status
"""

EXAMPLES = """
- iosxr_get_facts:
"""

RETURN = """
stdout:                               
  description: raw response
  returned: always
stdout_lines:   
  description: list of response lines
  returned: always
"""

def main():
    module = AnsibleModule(
        argument_spec = dict(
            data=dict(required=False, default=None),
        ),
        supports_check_mode = True
    )
    # make sure "terminal length 0" is set on XR console
    cmds = [ 'show platform',
             'show version',
             'show inventory all',
             'show memory summary',
             'show install active',
             'show filesystem',
             'show media',
             'show license all',
             'show route',
             'show running-config',
             'show arp',
             'show ipv4 int brief',
             'show ipv6 int brief' ]

    result = dict(changed=False)
    for cmd in cmds:
        command = "source /etc/profile ; nsenter -t 1 -n -- xr_cli '%s'" % cmd
        (rc, out, err) = module.run_command(command, use_unsafe_shell=True)
        result[cmd] = str(out).splitlines()
    return module.exit_json(**result)

if __name__ == "__main__":
    main()
