#!/usr/bin/python
#------------------------------------------------------------------------------
# Copyright 2016 Cisco Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#------------------------------------------------------------------------------

from ansible.module_utils.basic import *

DOCUMENTATION = """
---
module: iosxr_reload
author: Adisorn Ermongkonchai
short_description: Reload IOS-XR device
description:
  - Restart specified IOS-XR device
options:
  confirm:
    description:
      - make sure user really want to reload
    required: true
    value: "yes" or other string
  force:
    description:
      - force reaload without doing any cleanup
    required: false
    default: false
"""

EXAMPLES = """
- iosxr_reload:
    force: True
"""

RETURN = """
stdout:                               
  description: raw response
  returned: always
stdout_lines:   
  description: list of response lines
  returned: always
"""

def main():
    module = AnsibleModule(
        argument_spec = dict(
            confirm = dict(required=True),
            force   = dict(required=False, type='bool', default=False)
        ),
        supports_check_mode = True
    )
    args = module.params
    if args['confirm'] != 'yes':
        result['stdout'] = "reload aborted"
        module.exit_json(**result)
 
    command = '/bin/echo y > yes'
    (rc, out, err) = module.run_command(command, use_unsafe_shell=True)
    reload_command = 'source /etc/profile ; nsenter -t 1 -n -- reload -t 0x0 '
    reload_options = '-a' if args['force'] is True else '-d'
    command = reload_command + reload_options + ' < yes'
    (rc, out, err) = module.run_command(command, use_unsafe_shell=True)
  
    result = dict(changed=False)
    result['stdout'] = out
    result['stdout_lines'] = err if err != "" else out
    return module.exit_json(**result)

if __name__ == "__main__":
    main()
